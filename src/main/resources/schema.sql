DROP TABLE IF EXISTS mpa CASCADE;
CREATE TABLE mpa  (
    mpa_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar (100) NOT NULL
);

DROP TABLE IF EXISTS genres CASCADE;
CREATE TABLE genres  (
    genre_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar (100) NOT NULL
);

DROP TABLE IF EXISTS films CASCADE;
CREATE TABLE films (
    film_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar (100) NOT NULL,
    description varchar (200) NOT NULL,
    release_date date,
    duration int,
    mpa_id int REFERENCES mpa (mpa_id) ON DELETE CASCADE,
    CONSTRAINT release_after_date CHECK (release_date>'1895-12-27'),
    CONSTRAINT film_not_blank_fields CHECK (name <> '' AND description <> '' AND duration > 0)
);

DROP TABLE IF EXISTS film_genres CASCADE;
CREATE TABLE IF NOT EXISTS film_genres (
	film_id integer REFERENCES films (film_id) ON DELETE CASCADE,
	genre_id integer REFERENCES genres (genre_id)
);


DROP TABLE IF EXISTS users CASCADE;
CREATE TABLE users  (
    user_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email varchar (100) NOT NULL,
    login varchar (100) NOT NULL,
    name varchar (100),
    birthday date NOT NULL,

    CONSTRAINT user_not_blank_fields CHECK (email <> '' AND login <> ''),
    CONSTRAINT birthday_before_now CHECK (birthday <= NOW())
);


DROP TABLE IF EXISTS friends CASCADE;
CREATE TABLE friends (
    user_id int NOT NULL REFERENCES users (user_id) ON DELETE CASCADE,
    friend_id int NOT NULL REFERENCES users (user_id) ON DELETE CASCADE,
    confirmed boolean DEFAULT false
);


DROP TABLE IF EXISTS likes CASCADE;
CREATE TABLE likes  (
    film_id int REFERENCES films(film_id) ON DELETE CASCADE,
    user_id int REFERENCES users(user_id) ON DELETE CASCADE
);
